/**
 * CelestialWizardry
 * Master build file
 *
 * @author PizzAna
 */
buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = "cbs"
            url = "https://raw.githubusercontent.com/PizzAna/maven/master/"
        }
    }
    dependencies {
        classpath 'celestibytes.gradle:CelestiGradle:1.0.2'
        classpath 'io.github.pizzana:JKaffe:1.0.1'
    }
}

import static io.github.pizzana.jkaffe.util.gradle.ProjectPropertyHelper.Source.*;

apply plugin: 'maven'
apply plugin: 'forge'

group 'io.github.pizzana'
archivesBaseName = project.getName()

if(System.getenv().BUILD_NUMBER != null)
{
    ext.buildNumber = "${System.getenv().BUILD_NUMBER}"
}
else
{
    ext.buildNumber = "null"
}

version = getCWVersion(getProject(), "VERSION") + "." + project.buildNumber

ext.mc = getCWVersion(getProject(), "MINECRAFT")
ext.forge = getCWVersion(getProject(), "FORGE")
ext.baubles = getCWVersion(getProject(), "BAUBLES")
ext.baubles_mc = getCWVersion(getProject(), "BAUBLES_MC")
ext.baubles_root = getProperty(getProject(), "src/main/java/celestibytes/celestialwizardry/reference/Reference.java", "BAUBLES_ROOT")

minecraft {
    version = project.mc + "-" + project.forge
    assetDir = "run/assets"

    replaceIn "reference/Reference.java"
    if (project.hasProperty("signature"))
    {
        replace "@FINGERPRINT@", project.signature
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mc_version", project.mc
    inputs.property "baubles_version", project.baubles
    inputs.property "baubles_mc", project.baubles_mc
    inputs.property "baubles_root", project.baubles_root

    exclude '**/*.xcf'

    from(sourceSets.main.resources.srcDirs) {
        include '*.info'

        expand 'version': project.version, 'mc_version': project.mc, 'baubles_version': project.baubles, 'baubles_mc': project.baubles_mc, 'baubles_root': project.baubles_root
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
    }
}

version = project.mc + "-" + project.version

// Keystore location
if (!project.hasProperty("keystore_location"))
{
    ext.keystore_location = "."
}

apply plugin: 'celestibytes'

uploadArchives {
    /* repositories {
        if (project.hasProperty("releases") && project.hasProperty("snapshots"))
        {
            mavenDeployer {
                beforeDeployment {MavenDeployment deployment -> signing.signPom(deployment)}

                repository(url: project.releases) {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: project.snapshots) {
                    authentication(userName: project.ossrhUsername, password: project.ossrhPassword)
                }

                pom.project {
                    name project.archivesBaseName
                    packaging 'jar'
                    description 'CelestialWizardry'
                    url 'https://github.com/PizzAna/CelestialWizardry'

                    scm {
                        url 'https://github.com/PizzAna/CelestialWizardry'
                        connection 'scm:git:git://github.com/PizzAna/CelestialWizardry.git'
                        developerConnection 'scm:git:git@github.com:PizzAna/CelestialWizardry.git'
                    }

                    issueManagement {
                        system 'github'
                        url 'https://github.com/PizzAna/CelestialWizardry/issues'
                    }

                    licenses {
                        license {
                            name 'GNU GENERAL PUBLIC LICENSE v2'
                            url 'http://www.gnu.org/licenses/gpl-2.0.html'
                        }
                    }

                    developers {
                        developer {
                            id 'PizzAna'
                            name 'PizzAna'
                            roles {role 'developer'}
                        }
                        developer {
                            id 'le683'
                            name 'Okkapel'
                            roles {role 'developer'}
                        }
                    }
                }
            }
        }
    } */
}
